"use strict";exports.__esModule=true;exports.default=build;var _chalk=_interopRequireDefault(require("chalk"));var _fs=_interopRequireDefault(require("fs"));var _mkdirp=_interopRequireDefault(require("mkdirp"));var _constants=require("../next-server/lib/constants");var _config=_interopRequireWildcard(require("../next-server/server/config"));var _index=_interopRequireDefault(require("next/dist/compiled/nanoid/index.js"));var _path=_interopRequireDefault(require("path"));var _util=require("util");var _jestWorker=_interopRequireDefault(require("jest-worker"));var _formatWebpackMessages=_interopRequireDefault(require("../client/dev/error-overlay/format-webpack-messages"));var _recursiveDelete=require("../lib/recursive-delete");var _recursiveReaddir=require("../lib/recursive-readdir");var _verifyTypeScriptSetup=require("../lib/verifyTypeScriptSetup");var _events=require("../telemetry/events");var _compiler=require("./compiler");var _entries=require("./entries");var _generateBuildId=require("./generate-build-id");var _isWriteable=require("./is-writeable");var _utils=require("./utils");var _webpackConfig=_interopRequireDefault(require("./webpack-config"));var _chunkGraphPlugin=require("./webpack/plugins/chunk-graph-plugin");var _writeBuildId=require("./write-build-id");var _spinner=_interopRequireDefault(require("./spinner"));var _constants2=require("../lib/constants");function _interopRequireWildcard(obj){if(obj&&obj.__esModule){return obj;}else{var newObj={};if(obj!=null){for(var key in obj){if(Object.prototype.hasOwnProperty.call(obj,key)){var desc=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):{};if(desc.get||desc.set){Object.defineProperty(newObj,key,desc);}else{newObj[key]=obj[key];}}}}newObj.default=obj;return newObj;}}function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _wrapRegExp(re,groups){_wrapRegExp=function(re,groups){return new BabelRegExp(re,groups);};var _RegExp=_wrapNativeSuper(RegExp);var _super=RegExp.prototype;var _groups=new WeakMap();function BabelRegExp(re,groups){var _this=_RegExp.call(this,re);_groups.set(_this,groups);return _this;}_inherits(BabelRegExp,_RegExp);BabelRegExp.prototype.exec=function(str){var result=_super.exec.call(this,str);if(result)result.groups=buildGroups(result,this);return result;};BabelRegExp.prototype[Symbol.replace]=function(str,substitution){if(typeof substitution==="string"){var groups=_groups.get(this);return _super[Symbol.replace].call(this,str,substitution.replace(/\$<([^>]+)>/g,function(_,name){return"$"+groups[name];}));}else if(typeof substitution==="function"){var _this=this;return _super[Symbol.replace].call(this,str,function(){var args=[];args.push.apply(args,arguments);if(typeof args[args.length-1]!=="object"){args.push(buildGroups(args,_this));}return substitution.apply(this,args);});}else{return _super[Symbol.replace].call(this,str,substitution);}};function buildGroups(result,re){var g=_groups.get(re);return Object.keys(g).reduce(function(groups,name){groups[name]=result[g[name]];return groups;},Object.create(null));}return _wrapRegExp.apply(this,arguments);}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function");}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,writable:true,configurable:true}});if(superClass)_setPrototypeOf(subClass,superClass);}function _possibleConstructorReturn(self,call){if(call&&(typeof call==="object"||typeof call==="function")){return call;}return _assertThisInitialized(self);}function _assertThisInitialized(self){if(self===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return self;}function _wrapNativeSuper(Class){var _cache=typeof Map==="function"?new Map():undefined;_wrapNativeSuper=function _wrapNativeSuper(Class){if(Class===null||!_isNativeFunction(Class))return Class;if(typeof Class!=="function"){throw new TypeError("Super expression must either be null or a function");}if(typeof _cache!=="undefined"){if(_cache.has(Class))return _cache.get(Class);_cache.set(Class,Wrapper);}function Wrapper(){return _construct(Class,arguments,_getPrototypeOf(this).constructor);}Wrapper.prototype=Object.create(Class.prototype,{constructor:{value:Wrapper,enumerable:false,writable:true,configurable:true}});return _setPrototypeOf(Wrapper,Class);};return _wrapNativeSuper(Class);}function isNativeReflectConstruct(){if(typeof Reflect==="undefined"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy==="function")return true;try{Date.prototype.toString.call(Reflect.construct(Date,[],function(){}));return true;}catch(e){return false;}}function _construct(Parent,args,Class){if(isNativeReflectConstruct()){_construct=Reflect.construct;}else{_construct=function _construct(Parent,args,Class){var a=[null];a.push.apply(a,args);var Constructor=Function.bind.apply(Parent,a);var instance=new Constructor();if(Class)_setPrototypeOf(instance,Class.prototype);return instance;};}return _construct.apply(null,arguments);}function _isNativeFunction(fn){return Function.toString.call(fn).indexOf("[native code]")!==-1;}function _setPrototypeOf(o,p){_setPrototypeOf=Object.setPrototypeOf||function _setPrototypeOf(o,p){o.__proto__=p;return o;};return _setPrototypeOf(o,p);}function _getPrototypeOf(o){_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function _getPrototypeOf(o){return o.__proto__||Object.getPrototypeOf(o);};return _getPrototypeOf(o);}const fsUnlink=(0,_util.promisify)(_fs.default.unlink);const fsRmdir=(0,_util.promisify)(_fs.default.rmdir);const fsStat=(0,_util.promisify)(_fs.default.stat);const fsMove=(0,_util.promisify)(_fs.default.rename);const fsReadFile=(0,_util.promisify)(_fs.default.readFile);const fsWriteFile=(0,_util.promisify)(_fs.default.writeFile);const mkdirp=(0,_util.promisify)(_mkdirp.default);const staticCheckWorker=require.resolve('./static-checker');async function build(dir,conf=null){if(!(await(0,_isWriteable.isWriteable)(dir))){throw new Error('> Build directory is not writeable. https://err.sh/zeit/next.js/build-dir-not-writeable');}await(0,_verifyTypeScriptSetup.verifyTypeScriptSetup)(dir);let backgroundWork=[];backgroundWork.push((0,_events.recordVersion)({cliCommand:'build'}),(0,_events.recordNextPlugins)(_path.default.resolve(dir)));const buildSpinner=(0,_spinner.default)({prefixText:'Creating an optimized production build'});const config=(0,_config.default)(_constants.PHASE_PRODUCTION_BUILD,dir,conf);const{target}=config;const buildId=await(0,_generateBuildId.generateBuildId)(config.generateBuildId,_index.default);const distDir=_path.default.join(dir,config.distDir);const pagesDir=_path.default.join(dir,'pages');const publicDir=_path.default.join(dir,'public');let publicFiles=[];if(config.experimental.publicDirectory){publicFiles=await(0,_recursiveReaddir.recursiveReadDir)(publicDir,/.*/);}let tracer=null;if(config.experimental.profiling){const{createTrace}=require('./profiler/profiler.js');tracer=createTrace(_path.default.join(distDir,`profile-events.json`));tracer.profiler.startProfiling();}const isLikeServerless=(0,_config.isTargetLikeServerless)(target);const pagePaths=await(0,_utils.collectPages)(pagesDir,config.pageExtensions);// needed for static exporting since we want to replace with HTML
// files
const allStaticPages=new Set();let allPageInfos=new Map();const mappedPages=(0,_entries.createPagesMapping)(pagePaths,config.pageExtensions);const entrypoints=(0,_entries.createEntrypoints)(mappedPages,target,buildId,config);const conflictingPublicFiles=[];try{await fsStat(_path.default.join(publicDir,'_next'));throw new Error(_constants2.PUBLIC_DIR_MIDDLEWARE_CONFLICT);}catch(err){}for(let file of publicFiles){file=file.replace(/\\/g,'/').replace(/\/index$/,'').split(publicDir).pop();if(mappedPages[file]){conflictingPublicFiles.push(file);}}const numConflicting=conflictingPublicFiles.length;if(numConflicting){throw new Error(`Conflicting public and page file${numConflicting===1?' was':'s were'} found. https://err.sh/zeit/next.js/conflicting-public-file-page\n${conflictingPublicFiles.join('\n')}`);}const configs=await Promise.all([(0,_webpackConfig.default)(dir,{tracer,buildId,isServer:false,config,target,entrypoints:entrypoints.client}),(0,_webpackConfig.default)(dir,{tracer,buildId,isServer:true,config,target,entrypoints:entrypoints.server})]);const clientConfig=configs[0];if(clientConfig.optimization&&(clientConfig.optimization.minimize!==true||clientConfig.optimization.minimizer&&clientConfig.optimization.minimizer.length===0)){console.warn(_chalk.default.bold.yellow(`Warning: `)+_chalk.default.bold(`Production code optimization has been disabled in your project. Read more: https://err.sh/zeit/next.js/minification-disabled`));}const webpackBuildStart=process.hrtime();let result={warnings:[],errors:[]// TODO: why do we need this?? https://github.com/zeit/next.js/issues/8253
};if(isLikeServerless){const clientResult=await(0,_compiler.runCompiler)(clientConfig);// Fail build if clientResult contains errors
if(clientResult.errors.length>0){result={warnings:[...clientResult.warnings],errors:[...clientResult.errors]};}else{const serverResult=await(0,_compiler.runCompiler)(configs[1]);result={warnings:[...clientResult.warnings,...serverResult.warnings],errors:[...clientResult.errors,...serverResult.errors]};}}else{result=await(0,_compiler.runCompiler)(configs);}const webpackBuildEnd=process.hrtime(webpackBuildStart);if(buildSpinner){buildSpinner.stopAndPersist();}console.log();result=(0,_formatWebpackMessages.default)(result);if(result.errors.length>0){// Only keep the first error. Others are often indicative
// of the same problem, but confuse the reader with noise.
if(result.errors.length>1){result.errors.length=1;}const error=result.errors.join('\n\n');console.error(_chalk.default.red('Failed to compile.\n'));if(error.indexOf('private-next-pages')>-1&&error.indexOf('does not contain a default export')>-1){const page_name_regex=_wrapRegExp(/\'private-next-pages\/([^\']*)\'/,{page_name:1});const parsed=page_name_regex.exec(error);const page_name=parsed&&parsed.groups&&parsed.groups.page_name;throw new Error(`webpack build failed: found page without a React Component as default export in pages/${page_name}\n\nSee https://err.sh/zeit/next.js/page-without-valid-component for more info.`);}console.error(error);console.error();if(error.indexOf('private-next-pages')>-1){throw new Error('> webpack config.resolve.alias was incorrectly overriden. https://err.sh/zeit/next.js/invalid-resolve-alias');}throw new Error('> Build failed because of webpack errors');}else if(result.warnings.length>0){console.warn(_chalk.default.yellow('Compiled with warnings.\n'));console.warn(result.warnings.join('\n\n'));console.warn();}else{console.log(_chalk.default.green('Compiled successfully.\n'));backgroundWork.push((0,_events.recordBuildDuration)({totalPageCount:pagePaths.length,durationInSeconds:webpackBuildEnd[0]}));}const postBuildSpinner=(0,_spinner.default)({prefixText:'Automatically optimizing pages'});const distPath=_path.default.join(dir,config.distDir);const pageKeys=Object.keys(mappedPages);const manifestPath=_path.default.join(distDir,isLikeServerless?_constants.SERVERLESS_DIRECTORY:_constants.SERVER_DIRECTORY,_constants.PAGES_MANIFEST);const sprPages=new Set();const staticPages=new Set();const invalidPages=new Set();const hybridAmpPages=new Set();const pageInfos=new Map();const pagesManifest=JSON.parse((await fsReadFile(manifestPath,'utf8')));let customAppGetInitialProps;process.env.NEXT_PHASE=_constants.PHASE_PRODUCTION_BUILD;const staticCheckWorkers=new _jestWorker.default(staticCheckWorker,{numWorkers:config.experimental.cpus,enableWorkerThreads:true});const analysisBegin=process.hrtime();await Promise.all(pageKeys.map(async page=>{const chunks=(0,_chunkGraphPlugin.getPageChunks)(page);const actualPage=page==='/'?'/index':page;const size=await(0,_utils.getPageSizeInKb)(actualPage,distDir,buildId);const bundleRelative=_path.default.join(isLikeServerless?'pages':`static/${buildId}/pages`,actualPage+'.js');const serverBundle=_path.default.join(distDir,isLikeServerless?_constants.SERVERLESS_DIRECTORY:_constants.SERVER_DIRECTORY,bundleRelative);let isStatic=false;pagesManifest[page]=bundleRelative.replace(/\\/g,'/');const runtimeEnvConfig={publicRuntimeConfig:config.publicRuntimeConfig,serverRuntimeConfig:config.serverRuntimeConfig};const nonReservedPage=!page.match(/^\/(_app|_error|_document|api)/);if(nonReservedPage&&customAppGetInitialProps===undefined){customAppGetInitialProps=(0,_utils.hasCustomAppGetInitialProps)(isLikeServerless?serverBundle:_path.default.join(distDir,_constants.SERVER_DIRECTORY,`/static/${buildId}/pages/_app.js`),runtimeEnvConfig);if(customAppGetInitialProps){console.warn(_chalk.default.bold.yellow(`Warning: `)+_chalk.default.yellow(`You have opted-out of Automatic Prerendering due to \`getInitialProps\` in \`pages/_app\`.`));console.warn('Read more: https://err.sh/next.js/opt-out-automatic-prerendering\n');}}if(nonReservedPage){try{let result=await staticCheckWorkers.default({serverBundle,runtimeEnvConfig});if(result.isHybridAmp){hybridAmpPages.add(page);}if(result.static&&customAppGetInitialProps===false){staticPages.add(page);isStatic=true;}else if(result.prerender){sprPages.add(page);}}catch(err){if(err.message!=='INVALID_DEFAULT_EXPORT')throw err;invalidPages.add(page);}}pageInfos.set(page,{size,chunks,serverBundle,static:isStatic});}));staticCheckWorkers.end();if(invalidPages.size>0){throw new Error(`automatic static optimization failed: found page${invalidPages.size===1?'':'s'} without a React Component as default export in \n${[...invalidPages].map(pg=>`pages${pg}`).join('\n')}\n\nSee https://err.sh/zeit/next.js/page-without-valid-component for more info.\n`);}if(Array.isArray(configs[0].plugins)){configs[0].plugins.some(plugin=>{if(!plugin.ampPages){return false;}plugin.ampPages.forEach(pg=>{pageInfos.get(pg).isAmp=true;});return true;});}await(0,_writeBuildId.writeBuildId)(distDir,buildId);const prerenderFiles={};if(staticPages.size>0||sprPages.size>0){const combinedPages=[...staticPages,...sprPages];const exportApp=require('../export').default;const exportOptions={sprPages,silent:true,buildExport:true,pages:combinedPages,outdir:_path.default.join(distDir,'export')};const exportConfig={...config,exportPathMap:defaultMap=>defaultMap,exportTrailingSlash:false};await exportApp(dir,exportOptions,exportConfig);// remove server bundles that were exported
for(const page of staticPages){const{serverBundle}=pageInfos.get(page);await fsUnlink(serverBundle);}const moveExportedPage=async(page,file)=>{const isSpr=sprPages.has(page);file=`${file}.html`;const orig=_path.default.join(exportOptions.outdir,file);const relativeDest=(isLikeServerless?_path.default.join('pages',file):_path.default.join('static',buildId,'pages',file)).replace(/\\/g,'/');const dest=_path.default.join(distDir,isLikeServerless?_constants.SERVERLESS_DIRECTORY:_constants.SERVER_DIRECTORY,relativeDest);if(isSpr){const projectRelativeDest=_path.default.join(config.distDir,isLikeServerless?_constants.SERVERLESS_DIRECTORY:_constants.SERVER_DIRECTORY,relativeDest);prerenderFiles[projectRelativeDest]={lambda:projectRelativeDest.replace(/\.html$/,'.js'),contentTypes:['application/json','text/html']};}else{pagesManifest[page]=relativeDest;if(page==='/')pagesManifest['/index']=relativeDest;if(page==='/.amp')pagesManifest['/index.amp']=relativeDest;}await mkdirp(_path.default.dirname(dest));await fsMove(orig,dest);};for(const page of combinedPages){let file=page==='/'?'/index':page;await moveExportedPage(page,file);const hasAmp=hybridAmpPages.has(page);if(hasAmp)await moveExportedPage(`${page}.amp`,`${file}.amp`);}// remove temporary export folder
await(0,_recursiveDelete.recursiveDelete)(exportOptions.outdir);await fsRmdir(exportOptions.outdir);await fsWriteFile(manifestPath,JSON.stringify(pagesManifest),'utf8');}if(postBuildSpinner)postBuildSpinner.stopAndPersist();console.log();const analysisEnd=process.hrtime(analysisBegin);backgroundWork.push((0,_events.recordBuildOptimize)({durationInSeconds:analysisEnd[0],totalPageCount:pagePaths.length,staticPageCount:staticPages.size,ssrPageCount:pagePaths.length-staticPages.size}));if(sprPages.size>0){await fsWriteFile(_path.default.join(distDir,_constants.PRERENDER_MANIFEST),JSON.stringify({prerenderFiles}),'utf8');}staticPages.forEach(pg=>allStaticPages.add(pg));pageInfos.forEach((info,key)=>{allPageInfos.set(key,info);});(0,_utils.printTreeView)(Object.keys(mappedPages),allPageInfos,isLikeServerless);if(tracer){const parsedResults=await tracer.profiler.stopProfiling();await new Promise(resolve=>{if(parsedResults===undefined){tracer.profiler.destroy();tracer.trace.flush();tracer.end(resolve);return;}const cpuStartTime=parsedResults.profile.startTime;const cpuEndTime=parsedResults.profile.endTime;tracer.trace.completeEvent({name:'TaskQueueManager::ProcessTaskFromWorkQueue',id:++tracer.counter,cat:['toplevel'],ts:cpuStartTime,args:{src_file:'../../ipc/ipc_moji_bootstrap.cc',src_func:'Accept'}});tracer.trace.completeEvent({name:'EvaluateScript',id:++tracer.counter,cat:['devtools.timeline'],ts:cpuStartTime,dur:cpuEndTime-cpuStartTime,args:{data:{url:'webpack',lineNumber:1,columnNumber:1,frame:'0xFFF'}}});tracer.trace.instantEvent({name:'CpuProfile',id:++tracer.counter,cat:['disabled-by-default-devtools.timeline'],ts:cpuEndTime,args:{data:{cpuProfile:parsedResults.profile}}});tracer.profiler.destroy();tracer.trace.flush();tracer.end(resolve);});}await Promise.all(backgroundWork).catch(()=>{});}