"use strict";exports.__esModule=true;exports.createHook=createHook;var _react=require("react");var _dataManagerContext=require("../next-server/lib/data-manager-context");var _routerContext=require("../next-server/lib/router-context");var _unfetch=_interopRequireDefault(require("unfetch"));var _querystring=require("querystring");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function generateArgsKey(args){return args.reduce((a,b)=>{if(Array.isArray(b)){return a+generateArgsKey(b);}if(typeof b!=='string'&&typeof b!=='number'){throw new Error('arguments can only be string or number');}return a+b.toString();},'');}function createHook(fetcher,options){if(!options.key){throw new Error('key not provided to createHook options.');}return function useData(...args){const router=(0,_react.useContext)(_routerContext.RouterContext);const dataManager=(0,_react.useContext)(_dataManagerContext.DataManagerContext);const key=`${options.key}${generateArgsKey(args)}`;const existing=dataManager.get(key);if(existing){if(existing.status==='resolved'){return existing.result;}if(existing==='mismatched-key'){throw new Error('matching key was missing from returned data. make sure arguments match between the client and server');}}// @ts-ignore webpack optimization
if(typeof window!=='undefined'){const res=(0,_unfetch.default)(router.route+'?'+(0,_querystring.stringify)(router.query),{headers:{accept:'application/amp.bind+json'}}).then(res=>res.json()).then(result=>{const hasKey=result.some(pair=>pair[0]===key);if(!hasKey){result=[[key,'mismatched-key']];}dataManager.overwrite(result);});throw res;}else{const res=fetcher(...args).then(result=>{dataManager.set(key,{status:'resolved',result});});throw res;}};}